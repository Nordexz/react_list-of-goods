{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","orderingGoods","map","word","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByType","reset","this","isResetButtonVisible","goods","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","type","classNames","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FCbQC,EAAuB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrC,OACE,6BACGA,EAAcC,KAAI,SAACC,GAAD,OACjB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SDJnBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,WAAa,SAACJ,GACZ,EAAKG,SAAS,CAAEH,cAbpB,EAgBEK,MAAQ,WACN,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAAuBP,IAAaT,EAASU,MAAQF,EACrDN,EA1DH,SACLe,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQZ,GACN,KAAKT,EAASsB,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKrB,EAASwB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,KAAKzB,EAASU,KACd,QACE,OAAO,MAITF,GACFU,EAAaP,UAGRO,EAkCiBQ,CAAkBrB,EAAiBU,KAAKR,OAE9D,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYpB,IAAaT,EAASsB,WAGtCQ,QAAS,kBAAM,EAAKjB,WAAWb,EAASsB,WAR1C,iCAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYpB,IAAaT,EAASwB,SAGtCM,QAAS,kBAAM,EAAKjB,WAAWb,EAASwB,SAR1C,4BAaA,wBACEI,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAarB,IAGjBsB,QAASf,KAAKJ,QARhB,qBAaCK,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,cAAC,EAAD,CAAWZ,cAAeA,WAjFlC,GAAyB6B,aE3DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c8b8d70a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByType = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const isResetButtonVisible = sortType !== SortType.NONE || isReversed;\n    const orderingGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.sortByType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.sortByType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isResetButtonVisible && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList orderingGoods={orderingGoods} />\n      </div>\n    );\n  }\n}\n","import { FC } from 'react';\n\ntype Props = {\n  orderingGoods: string[];\n};\n\nexport const GoodsList: FC<Props> = ({ orderingGoods }) => {\n  return (\n    <ul>\n      {orderingGoods.map((word) => (\n        <li data-cy=\"Good\" key={word}>\n          {word}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}